[{"/Users/amittal/projects/optimg/client/src/components/Home.tsx":"1","/Users/amittal/projects/optimg/client/src/index.tsx":"2","/Users/amittal/projects/optimg/client/src/pages/Compare.tsx":"3","/Users/amittal/projects/optimg/client/src/pages/Optimize.tsx":"4","/Users/amittal/projects/optimg/client/src/pages/Gallery.tsx":"5","/Users/amittal/projects/optimg/client/src/pages/Image.tsx":"6","/Users/amittal/projects/optimg/client/src/components/Drawer.tsx":"7","/Users/amittal/projects/optimg/client/src/Routes.tsx":"8","/Users/amittal/projects/optimg/client/src/components/SizeCompare.tsx":"9"},{"size":205,"mtime":1610277788105,"results":"10","hashOfConfig":"11"},{"size":500,"mtime":1609596864688,"results":"12","hashOfConfig":"11"},{"size":874,"mtime":1610385230719,"results":"13","hashOfConfig":"11"},{"size":6697,"mtime":1611410685173,"results":"14","hashOfConfig":"11"},{"size":2868,"mtime":1610822618230,"results":"15","hashOfConfig":"11"},{"size":2095,"mtime":1611402656183,"results":"16","hashOfConfig":"11"},{"size":1229,"mtime":1611319658433,"results":"17","hashOfConfig":"11"},{"size":904,"mtime":1611397997452,"results":"18","hashOfConfig":"11"},{"size":519,"mtime":1611405112145,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"dbj1sp",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"25"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/amittal/projects/optimg/client/src/components/Home.tsx",["44"],"import React, {  ReactElement } from 'react'\n\n\ninterface Props {\n    \n}\n\nexport default function Home({}: Props): ReactElement {\n   \n    return (\n        <div>\n            Home Page\n        </div>\n    )\n}\n","/Users/amittal/projects/optimg/client/src/index.tsx",[],["45","46"],"/Users/amittal/projects/optimg/client/src/pages/Compare.tsx",["47","48","49"],"import 'two-up-element';\n\nimport React, { ReactElement } from 'react';\nimport Title from 'antd/lib/typography/Title';\n\ndeclare global {\n    namespace JSX {\n      interface IntrinsicElements {\n        'two-up': React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>; // Normal web component; // Normal web component\n       \n      }\n    }\n  }\n\ninterface Props {}\n\nexport default function Compare({}: Props): ReactElement {\n  return (\n    <div>\n        <div className=\"flex justify-between items-baseline\">\n            <Title level={4}>Original Image</Title>\n            <Title level={4}>Converted Image</Title>\n        </div>\n      <two-up>\n        <div><img src=\"https://via.placeholder.com/1024/0000FF\" className=\"w-full\" /></div>\n        <div><img src=\"https://via.placeholder.com/1024/FF00FF\" className=\"w-full\" /></div>\n      </two-up>\n    </div>\n  );\n}\n",["50","51"],"/Users/amittal/projects/optimg/client/src/pages/Optimize.tsx",["52","53","54","55","56","57"],"/Users/amittal/projects/optimg/client/src/pages/Gallery.tsx",["58"],"import { Card, Col, Pagination, Row } from 'antd';\nimport Meta from 'antd/lib/card/Meta';\nimport React, { ReactElement } from 'react';\nimport { useQuery } from 'react-query';\nimport { Spin } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport { LinkOutlined } from '@ant-design/icons';\n\ninterface ParamTypes {\n  pageNo: string;\n  path: string;\n}\n\ninterface Props {}\nconst antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\nconst PageSize = 15;\n\nfunction Gallery({}: Props): ReactElement {\n  const history = useHistory();\n  const { pageNo = '1', path = '/' } = useParams<ParamTypes>();\n  const { data, isError, isLoading } = useQuery(\n    ['galleryData', pageNo, path],\n    () => {\n      const params = new URLSearchParams();\n      params.set('page', pageNo);\n      params.set('path', path);\n      return fetch(`/api/gallery?${params.toString()}`).then(res => res.json());\n    }\n  );\n  return (\n    <>\n      {isLoading && <Spin indicator={antIcon} />}\n      {!isLoading && !isError && (\n        <div>\n          <Row gutter={[16, 16]}>\n            {data.images && data.images.map((image: any) => (\n              <Col span={8}>\n                <Card\n                  hoverable\n                  style={{ width: 240 }}\n                  actions={[\n                    <Link\n                      to={`/image/${encodeURIComponent(\n                        image.image.path\n                      )}/${encodeURIComponent(image.image.name)}`}\n                    >\n                      <LinkOutlined key=\"open\" />\n                    </Link>,\n                  ]}\n                  cover={\n                    <img\n                      alt=\"example\"\n                      src={`/api/static/source/${image.image.path}/${image.image.name}`}\n                    />\n                  }\n                >\n                  <Meta\n                    title={image.image.name}\n                    description={\n                      <section>\n                        <div>\n                          Size: {Math.floor(image.image.size / 1024)} KB\n                        </div>\n                        <div>Varients: {image.varients.length}</div>\n                      </section>\n                    }\n                  />\n                </Card>\n              </Col>\n            ))}\n          </Row>\n\n          <div className=\"flex justify-end my-4\">\n            <Pagination\n              defaultCurrent={data.currentPage}\n              total={data.totalPages * PageSize}\n              defaultPageSize={PageSize}\n              showSizeChanger={false}\n              onChange={(page: number) => {\n                history.push(`/gallery/${encodeURIComponent(path)}/${page}`);\n              }}\n            />\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default Gallery;\n","/Users/amittal/projects/optimg/client/src/pages/Image.tsx",["59","60"],"import { Card, Col, Row } from 'antd';\nimport Meta from 'antd/lib/card/Meta';\nimport Title from 'antd/lib/typography/Title';\nimport React, { ReactElement } from 'react';\nimport { useQuery } from 'react-query';\nimport { useParams } from 'react-router-dom';\nimport SizeCompare from '../components/SizeCompare';\n\ninterface Props {}\n\ninterface ParamTypes {\n  path: string;\n  name: string;\n}\n\nfunction Image({}: Props): ReactElement {\n  const { path = '/', name } = useParams<ParamTypes>();\n  const { data, isError, isLoading } = useQuery<any>(\n    ['getImagedata', path, name],\n    () => {\n      const params = new URLSearchParams();\n      params.set('path', path);\n      params.set('name', name);\n      return fetch(`/api/image?${params.toString()}`).then((res: Response) =>\n        res.json()\n      );\n    }\n  );\n  if (isLoading) return <div>Loading...</div>;\n  if (isError) return <div>Error...</div>;\n  return (\n    <div>\n      <div>\n        <img\n          src={`/api/static/source/${encodeURIComponent(\n            path\n          )}/${encodeURIComponent(name)}`}\n          className=\"w-6/12 m-auto\"\n        />\n      </div>\n      <Title level={3} className=\"my-4\">\n        Varients\n      </Title>\n\n      <Row>\n        {data.varients.map((varient: any) => (\n          <Col span={8}>\n            <Card\n              hoverable\n              style={{ width: 240 }}\n              cover={\n                <img\n                  alt=\"example\"\n                  src={`/api/static/dest/${encodeURIComponent(varient.path)}/${\n                    varient.name\n                  }`}\n                />\n              }\n            >\n              <Meta\n                title={varient.name}\n                description={\n                 <SizeCompare percentage={getSizePercentage(data.image.size, varient.size)} />\n                }\n              ></Meta>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n    </div>\n  );\n}\n\nconst getSizePercentage = (baseSize: number, targetSize: number) => {\n  return Math.round(((targetSize - baseSize) * 10000) / targetSize) / 100;\n};\n\nexport default Image;\n","/Users/amittal/projects/optimg/client/src/components/Drawer.tsx",["61","62","63"],"/Users/amittal/projects/optimg/client/src/Routes.tsx",["64","65"],"/Users/amittal/projects/optimg/client/src/components/SizeCompare.tsx",[],{"ruleId":"66","severity":1,"message":"67","line":8,"column":30,"nodeType":"68","messageId":"69","endLine":8,"endColumn":39},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"66","severity":1,"message":"67","line":17,"column":33,"nodeType":"68","messageId":"69","endLine":17,"endColumn":42},{"ruleId":"74","severity":1,"message":"75","line":25,"column":14,"nodeType":"76","endLine":25,"endColumn":86},{"ruleId":"74","severity":1,"message":"75","line":26,"column":14,"nodeType":"76","endLine":26,"endColumn":86},{"ruleId":"70","replacedBy":"77"},{"ruleId":"72","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":1,"column":31,"nodeType":"81","messageId":"82","endLine":1,"endColumn":36},{"ruleId":"79","severity":1,"message":"83","line":4,"column":43,"nodeType":"81","messageId":"82","endLine":4,"endColumn":51},{"ruleId":"66","severity":1,"message":"67","line":106,"column":19,"nodeType":"68","messageId":"69","endLine":106,"endColumn":28},{"ruleId":"79","severity":1,"message":"84","line":108,"column":11,"nodeType":"81","messageId":"82","endLine":108,"endColumn":18},{"ruleId":"79","severity":1,"message":"85","line":108,"column":20,"nodeType":"81","messageId":"82","endLine":108,"endColumn":29},{"ruleId":"79","severity":1,"message":"86","line":108,"column":55,"nodeType":"81","messageId":"82","endLine":108,"endColumn":60},{"ruleId":"66","severity":1,"message":"67","line":20,"column":18,"nodeType":"68","messageId":"69","endLine":20,"endColumn":27},{"ruleId":"66","severity":1,"message":"67","line":16,"column":16,"nodeType":"68","messageId":"69","endLine":16,"endColumn":25},{"ruleId":"74","severity":1,"message":"75","line":34,"column":9,"nodeType":"76","endLine":39,"endColumn":11},{"ruleId":"79","severity":1,"message":"87","line":12,"column":9,"nodeType":"81","messageId":"82","endLine":12,"endColumn":16},{"ruleId":"66","severity":1,"message":"67","line":17,"column":17,"nodeType":"68","messageId":"69","endLine":17,"endColumn":26},{"ruleId":"74","severity":1,"message":"75","line":26,"column":9,"nodeType":"76","endLine":26,"endColumn":32},{"ruleId":"79","severity":1,"message":"88","line":4,"column":8,"nodeType":"81","messageId":"82","endLine":4,"endColumn":14},{"ruleId":"66","severity":1,"message":"67","line":14,"column":17,"nodeType":"68","messageId":"69","endLine":14,"endColumn":26},"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-native-reassign",["89"],"no-negated-in-lhs",["90"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["89"],["90"],"@typescript-eslint/no-unused-vars","'Radio' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'isError' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'error' is assigned a value but never used.","'SubMenu' is assigned a value but never used.","'Navbar' is defined but never used.","no-global-assign","no-unsafe-negation"]